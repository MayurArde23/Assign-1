Date: 11 March 2025
--------------------
1. What is the purpose of git commit?
A) To save changes permanently in the remote repository
B) To stage changes for commit
C) To create a snapshot of staged changes in the local repository
D) To delete changes from the working directory
Ans:C) To create a snapshot of staged changes in the local repository
--------------------
2. Which command commits staged changes with a message?
A) git commit
B) git commit -m "Commit message"
C) git add -m "Commit message"
D) git push -m "Commit message"
Ans:B) git commit -m "Commit message"
--------------------
3. What happens if you run git commit without -m?
A) Git throws an error
B) Git opens the default text editor for entering a commit message
C) The commit is created with a default message
D) It commits all unstaged changes
Ans:B) Git opens the default text editor for entering a commit message
---------------------
4. How do you modify the message of the last commit?
A) git commit --amend -m "New message"
B) git commit -m "New message"
C) git add -m "New message"
D) git commit --edit
Ans:A) git commit --amend -m "New message"
--------------------
5. What does git commit --amend do?
A) Creates a new commit
B) Modifies the most recent commit by adding new changes or updating the message
C) Deletes the last commit
D) Pushes the last commit
Ans:B) Modifies the most recent commit by adding new changes or updating the message
----------------------
6. How do you commit all tracked changes (modified and deleted files) at once?
A) git commit -am "Commit message"
B) git commit -m "Commit message"
C) git commit --all
D) Both A and C
Ans:D) Both A and C
Note: Tracked files means files which are present in commit area.
If we modify tracked file or delete tracked file and want to commit 
directly from working area to commit then "git commit -am" or 
'git commit --all' command we can use.

Note: git commit -m 'Commit Message'  command commit only staged
area files but not working area files.
----------------------
7. What does git commit -a do?
A) Commits all changes, including untracked files
B) Stages and commits all tracked files (excluding untracked files)
C) Commits only new files
D) Pushes changes to the remote repository
Ans:B) Stages and commits all tracked files (excluding untracked files)
----------------------
8. How do you check the history of commits?
A) git log
B) git status
C) git commit --history
D) git branch -log
Ans: A) git log
------------------------
9. What happens if you commit without staging changes first?
A) Git throws an error
B) Only previously staged changes are committed
C) All changes in the working directory are committed
D) Git automatically stages and commits all changes
Ans:B) Only previously staged changes are committed
------------------------
Summary of git commit 
1. git commit is used to commit staged changes.
2. If we try to commit without -m option then git opens 
   default text editor to enter commit message.
3. Other options of git commit command 
   1. -a  
   Stages and commits all tracked files (excluding untracked files)
   
   2. --amend to edit last commit message.
   
   3. --all 
   Stages and commits all tracked files (excluding untracked files)
------------------------------END-----------------------